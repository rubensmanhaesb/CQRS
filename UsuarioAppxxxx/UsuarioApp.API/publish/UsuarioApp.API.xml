<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UsuarioApp.API</name>
    </assembly>
    <members>
        <member name="T:UsuariosApp.API.Contexts.DataContext">
            <summary>
            Classe de contexto do EntityFramework
            </summary>
        </member>
        <member name="M:UsuariosApp.API.Contexts.DataContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{UsuariosApp.API.Contexts.DataContext})">
            <summary>
            Construtor para injeção de dependência do contexto
            </summary>
        </member>
        <member name="M:UsuariosApp.API.Contexts.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Método para adicionarmos os mapeamentos das entidades
            </summary>
        </member>
        <member name="M:UsuariosApp.API.Controllers.UsuariosController.Criar(UsuariosApp.API.Dtos.Requests.CriarUsuarioRequestDto)">
            <summary>
            Cria um novo usuário no sistema
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:UsuariosApp.API.Controllers.UsuariosController.Autenticar(UsuariosApp.API.Dtos.Requests.AutenticarUsuarioRequestDto)">
            <summary>
            Realiza a autenticação do usuário 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:UsuariosApp.API.Controllers.UsuariosController.RefreshToken(System.String)">
            <summary>
            Gera um novo token de acesso e um novo refresh token com base no refresh token de 
            atualização informado.
            </summary>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:UsuariosApp.API.Services.UsuarioService.CriarAsync(UsuariosApp.API.Dtos.Requests.CriarUsuarioRequestDto)">
            <summary>
            Criar um novo usuário com base nos dados informados.
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="M:UsuariosApp.API.Services.UsuarioService.AutenticarAsync(UsuariosApp.API.Dtos.Requests.AutenticarUsuarioRequestDto)">
            <summary>
            Faz a autenticação do usuário com base no e-mail e senha informados.
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:UsuariosApp.API.Services.UsuarioService.RefreshTokenAsync(System.String)" -->
        <member name="M:UsuariosApp.API.Services.UsuarioService.GenerateToken(System.String)">
            <summary>
            Gera um novo token de acesso com base no e-mail do usuário
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:UsuariosApp.API.Services.UsuarioService.GenerateRefreshToken">
            <summary>
            Gera um novo refresh token
            </summary>
            <returns></returns>
        </member>
        <member name="T:UsuarioApp.API.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:UsuarioApp.API.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UsuarioApp.API.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UsuarioApp.API.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
